package ${package}.${moduleName}.controller;

import java.util.List;

import com.baomidou.mybatisplus.core.metadata.IPage;
#if(${hasSwagger})
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
#end
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.service.${className}Service;
import ${resultClassFullName};

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
#if(${hasSwagger})
@Api(tags = "${comments} 管理")
#end
@RestController
@RequestMapping("${moduleName}/${pathName}")
public class ${className}Controller {

    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 分页查询
     */
    @GetMapping("/page")
    #if(${hasSwagger})
@ApiOperation("分页查询")
#end
    public ${resultClassSimpleName}<IPage<${className}Entity>> query${className}ByPage(){
        return ${setResultMethod}(${classname}Service.queryPage());
    }


    /**
     * 根据id查询详细
     */
    @GetMapping("{${pk.attrname}}")
    #if(${hasSwagger})
@ApiOperation("根据id查询详细")
#end
    public ${resultClassSimpleName}<${className}Entity> query${className}ById(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
		${className}Entity ${classname} = ${classname}Service.getById(${pk.attrname});
        return ${setResultMethod}(${classname});
    }

    /**
     * 新增记录
     */
    @PostMapping("/add")
    #if(${hasSwagger})
@ApiOperation("新增记录")
#end
    public ${resultClassSimpleName}<Object> add(@RequestBody ${className}Entity ${classname}){
		${classname}Service.save(${classname});
        return ${setResultMethod}();
    }

    /**
     * 修改记录
     */
    @PostMapping("/update")
    #if(${hasSwagger})
@ApiOperation("修改记录")
#end
    public ${resultClassSimpleName}<Object> update(@RequestBody ${className}Entity ${classname}){
		${classname}Service.updateById(${classname});
        return ${setResultMethod}();
    }

    /**
     * 删除记录
     */
    @PostMapping("/delete")
    #if(${hasSwagger})
@ApiOperation("删除记录")
#end
    public ${resultClassSimpleName}<Object> delete(@RequestBody List<${pk.attrType}> ${pk.attrname}s){
		${classname}Service.removeByIds(${pk.attrname}s);
        return ${setResultMethod}();
    }

}
